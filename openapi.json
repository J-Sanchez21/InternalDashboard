{
  "openapi": "3.0.4",
  "info": {
    "title": "Swagger Dashboard",
    "version": "0.0.1"
  },
  "paths": {
    "/api/v1/prospects": {
      "get": {
        "tags": [
          "prospects"
        ],
        "summary": "Get all prospects",
        "description": "Get all prospects",
        "operationId": "getProspects",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": [
          "prospects"
        ],
        "summary": "Create new prospect",
        "description": "Create new prospect",
        "operationId": "postProspect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospects"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/v1/prospects/{prospectId}": {
      "get": {
        "tags": [
          "prospects"
        ],
        "summary": "Get prospect by Id",
        "description": "Get prospect by Id",
        "operationId": "getProspectById",
        "parameters": [
          {
            "name": "prospectId",
            "in": "path",
            "description": "ID of prospect to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "tags": [
          "prospects"
        ],
        "summary": "Modify prospect by Id",
        "description": "Modify prospect by Id",
        "operationId": "postProspectById",
        "parameters": [
          {
            "name": "prospectId",
            "in": "path",
            "description": "ID of prospect to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospects"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": [
          "prospects"
        ],
        "summary": "Delete prospect by Id",
        "description": "Delete prospect by Id",
        "operationId": "deleteProspectById",
        "parameters": [
          {
            "name": "prospectId",
            "in": "path",
            "description": "ID of prospect to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Prospects": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Jonatan Leonel"
          },
          "lastname": {
            "type": "string",
            "format": "string",
            "example": "Rodriguez Gonzalez"
          },
          "email": {
            "type": "string",
            "format": "string",
            "example": "ale@deloitte.com"
          },
          "phone": {
            "type": "integer",
            "format": "int64",
            "example": 3121321341
          },
          "route_to_resume": {
            "type": "string",
            "format": "string",
            "example": "asdas/pdf.pdf"
          },
          "status": {
            "type": "string",
            "example": "Active",
            "enum": [
              "Active",
              "Hired",
              "Not in process",
              "Discarted",
              "Paused"
            ]
          },
          "seniority": {
            "type": "string",
            "description": "level",
            "example": "Senior",
            "enum": [
              "Senior",
              "Consultant",
              "Analyst"
            ]
          },
          "job_title": {
            "type": "string",
            "description": "expertise",
            "example": "Backend Developer",
            "enum": [
              "Backend Developer",
              "Frontend Developer",
              "FullStack Developer"
            ]
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capabilities"
            }
          },
          "sub_capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sub_capabilities"
            }
          },
          "prospected_for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Projects"
            }
          },
          "crosstraining": {
            "type": "string",
            "example": "salesforce"
          },
          "project": {
            "$ref": "#/components/schemas/Projects"
          }
        }
      },
      "Capabilities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Java"
          }
        }
      },
      "Sub_capabilities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Java"
          }
        }
      },
      "Projects": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Java"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "format": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "format": "string",
            "example": "password"
          }
        }
      }
    }
  }
}