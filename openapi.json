{
  "openapi": "3.0.4",
  "info": {
    "title": "Swagger Petstore - OpenAPI 3.0",
    "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "https://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.12"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "https://swagger.io"
  },
  "servers": [
    {
      "url": "https://petstore3.swagger.io/api/v3"
    }
  ],
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "https://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "prospects"
    }
  ],
  "paths": {
    "/api/prospects": {
      "get": {
        "tags": [
          "prospects"
        ],
        "summary": "Get all prospects",
        "description": "Get all prospects",
        "operationId": "getProspects",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": [
          "prospects"
        ],
        "summary": "Create new prospect",
        "description": "Create new prospect",
        "operationId": "postProspect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospects"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/prospects/{prospectId}": {
      "get": {
        "tags": [
          "prospects"
        ],
        "summary": "Get prospect by Id",
        "description": "Get prospect by Id",
        "operationId": "getProspectById",
        "parameters": [
          {
            "name": "prospectId",
            "in": "path",
            "description": "ID of prospect to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "tags": [
          "prospects"
        ],
        "summary": "Modify prospect by Id",
        "description": "Modify prospect by Id",
        "operationId": "postProspectById",
        "parameters": [
          {
            "name": "prospectId",
            "in": "path",
            "description": "ID of prospect to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospects"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": [
          "prospects"
        ],
        "summary": "Delete prospect by Id",
        "description": "Delete prospect by Id",
        "operationId": "deleteProspectById",
        "parameters": [
          {
            "name": "prospectId",
            "in": "path",
            "description": "ID of prospect to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Prospects": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Jonatan Leonel"
          },
          "lastname": {
            "type": "string",
            "format": "string",
            "example": "Rodriguez Gonzalez"
          },
          "email": {
            "type": "string",
            "format": "string",
            "example": "ale@deloitte.com"
          },
          "phone": {
            "type": "integer",
            "format": "int64",
            "example": 3121321341
          },
          "route_to_resume": {
            "type": "string",
            "format": "string",
            "example": "asdas/pdf.pdf"
          },
          "status": {
            "type": "string",
            "example": "Active",
            "enum": [
              "Active",
              "Hired",
              "Not in process",
              "Discarted",
              "Paused"
            ]
          },
          "seniority": {
            "type": "string",
            "description": "level",
            "example": "Senior",
            "enum": [
              "Senior",
              "Consultant",
              "Analyst"
            ]
          },
          "job_title": {
            "type": "string",
            "description": "expertise",
            "example": "Backend Developer",
            "enum": [
              "Backend Developer",
              "Frontend Developer",
              "FullStack Developer"
            ]
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capabilities"
            }
          },
          "sub_capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sub_capabilities"
            }
          },
          "prospected_for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Projects"
            }
          },
          "crosstraining": {
            "type": "string",
            "example": "salesforce"
          },
          "project": {
            "$ref": "#/components/schemas/Projects"
          }
        }
      },
      "Capabilities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Java"
          }
        }
      },
      "Sub_capabilities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Java"
          }
        }
      },
      "Projects": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "format": "string",
            "example": "Java"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "format": "string",
            "example": "username"
          },
          "password": {
            "type": "string",
            "format": "string",
            "example": "password"
          }
        }
      }
    }
  }
}