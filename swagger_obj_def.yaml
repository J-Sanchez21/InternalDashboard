openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/users/{usersId}:
    get:
      tags:
        - user-controller
      operationId: getUser
      parameters:
        - name: usersId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntity'
    put:
      tags:
        - user-controller
      operationId: putUser
      parameters:
        - name: usersId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntity'
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: usersId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntity'
  /api/v1/roster/{rosterId}:
    get:
      tags:
        - roster-controller
      operationId: getRoster
      parameters:
        - name: rosterId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterEntity'
    put:
      tags:
        - roster-controller
      operationId: putRoster
      parameters:
        - name: rosterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosterEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterEntity'
    delete:
      tags:
        - roster-controller
      operationId: deleteRoster
      parameters:
        - name: rosterId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterEntity'
  /api/v1/prospect/{prospectId}:
    get:
      tags:
        - prospect-controller
      operationId: getProspect
      parameters:
        - name: prospectId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProspectEntity'
    put:
      tags:
        - prospect-controller
      operationId: putProspect
      parameters:
        - name: prospectId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProspectEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProspectEntity'
    delete:
      tags:
        - prospect-controller
      operationId: deleteProspect
      parameters:
        - name: prospectId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProspectEntity'
  /api/v1/project_contact/{projectContactId}:
    get:
      tags:
        - project-contact-controller
      operationId: getProjectContactById
      parameters:
        - name: projectContactId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectContactEntity'
    put:
      tags:
        - project-contact-controller
      operationId: updateProjectContact
      parameters:
        - name: projectContactId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectContactEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectContactEntity'
    delete:
      tags:
        - project-contact-controller
      operationId: deleteProjectContact
      parameters:
        - name: projectContactId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/project/{id}:
    get:
      tags:
        - project-controller
      operationId: getProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectEntity'
    put:
      tags:
        - project-controller
      operationId: putProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectEntity'
    delete:
      tags:
        - project-controller
      operationId: deleteProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/capability/{capabilitiesId}:
    get:
      tags:
        - capability-controller
      operationId: getCapabilityById
      parameters:
        - name: capabilitiesId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CapabilityEntity'
    put:
      tags:
        - capability-controller
      operationId: updateCapability
      parameters:
        - name: capabilitiesId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilityEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CapabilityEntity'
    delete:
      tags:
        - capability-controller
      operationId: deleteCapability
      parameters:
        - name: capabilitiesId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/users:
    get:
      tags:
        - user-controller
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserEntity'
    post:
      tags:
        - user-controller
      operationId: postUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntity'
  /api/v1/roster:
    get:
      tags:
        - roster-controller
      operationId: getRosters
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RosterEntity'
    post:
      tags:
        - roster-controller
      operationId: postRoster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosterEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RosterEntity'
  /api/v1/prospect:
    get:
      tags:
        - prospect-controller
      operationId: getProspects
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProspectEntity'
    post:
      tags:
        - prospect-controller
      operationId: postProspect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProspectEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProspectEntity'
  /api/v1/project_contact:
    get:
      tags:
        - project-contact-controller
      operationId: getAllProjectContacts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectContactEntity'
    post:
      tags:
        - project-contact-controller
      operationId: createProjectContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectContactEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectContactEntity'
  /api/v1/project:
    get:
      tags:
        - project-controller
      operationId: getAllProjects
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEntity'
    post:
      tags:
        - project-controller
      operationId: postProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectEntity'
  /api/v1/capability:
    get:
      tags:
        - capability-controller
      operationId: getAllCapabilities
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CapabilityEntity'
    post:
      tags:
        - capability-controller
      operationId: createCapability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilityEntity'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CapabilityEntity'
components:
  schemas:
    UserEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          maxLength: 2147483647
          minLength: 2
        password:
          type: string
          maxLength: 2147483647
          minLength: 8
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@-$!%?&])
        createdTime:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        level:
          type: string
    CapabilityEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdTime:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - MAIN_CAPABILITY
            - SECONDARY_CAPABILITY
    ProjectContactEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phone:
          type: integer
          format: int64
        createdTime:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        project:
          $ref: '#/components/schemas/ProjectEntity'
      required:
        - name
    ProjectEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        company:
          type: string
        createdTime:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        projectContacts:
          type: array
          items:
            $ref: '#/components/schemas/ProjectContactEntity'
        roster:
          type: array
          items:
            $ref: '#/components/schemas/RosterEntity'
        roster_prospected:
          type: array
          items:
            $ref: '#/components/schemas/RosterEntity'
      required:
        - company
        - name
    RosterEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: integer
          format: int64
        route_to_resume:
          type: string
        status:
          type: array
          items:
            type: string
            enum:
              - COMING_AVAILABLE
              - ASSIGNED
              - AVAILABLE
              - NOT_AVAILABLE
              - HOLD
        seniority:
          type: array
          items:
            type: string
            enum:
              - SENIOR
              - CONSULTANT
              - ANALYST
              - MANAGER
        job_title:
          type: array
          items:
            type: string
            enum:
              - BACKEND_DEVELOPER
              - FRONTEND_DEVELOPER
              - FULLSTACK_DEVELOPER
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityEntity'
        sub_capabilities:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityEntity'
        createdTime:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectEntity'
        project:
          $ref: '#/components/schemas/ProjectEntity'
    ProspectEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: integer
          format: int64
        route_to_resume:
          type: string
        createdTime:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        status:
          type: array
          items:
            type: string
            enum:
              - ACTIVE
              - HIRED
              - NOT_IN_PROCESS
              - DISCARTED
              - PAUSED
              - ARCHIVED
        seniority:
          type: array
          items:
            type: string
            enum:
              - SENIOR
              - CONSULTANT
              - ANALYST
              - MANAGER
        job_title:
          type: array
          items:
            type: string
            enum:
              - BACKEND_DEVELOPER
              - FRONTEND_DEVELOPER
              - FULLSTACK_DEVELOPER
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityEntity'
        sub_capabilities:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityEntity'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectEntity'
      required:
        - last_name
        - name
